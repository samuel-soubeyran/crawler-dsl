
start { download "url" }
download "url" recipe {
    emit page to { parse "continent" }
}

parse "continent" recipe {
    cssSelector "a[href~=AllLocations-g\\d+-Places]"
    attributeSelector "href"
    prepend "http://www.tripadvisor.com"
    apply { printInput it }
    emit link to { download "location" }
}

download "location" recipe {
    emit page to { parse "location" }
}

parse "location" recipe {
    cssSelector "a[href~=(AllLocations-g\\d+-c\\d+-(o\\d+-)?Hotels)]"
    attributeSelector "href"
    prepend "http://www.tripadvisor.com"
    apply { printInput it }
    emit link to { download "location" }

    cssSelector "a[href~=(Hotel_Review-g\\d+-d\\d+-Reviews)]"
    attributeSelector "href"
    prepend "http://www.tripadvisor.com"
    apply { printInput it }
    emit link to  { download "property" }
}

download "property" recipe {
    emit page to { parse "property" }
}

parse "property" recipe {
    apply { printInput it }
    cssSelector "body"
    apply { printInput it }
    emit object fields([
        city : {
            textCssSelector "span[property=addressLocality]"
            emit value
        },
        country : {
            textCssSelector "a[onClick*=Country] > span"
            emit value
        },
        continent : { 
            regexp  "Continent\\\\\",\\\\\"([\\w\\s]+)-"
            emit value
        },
        description : {
            textCssSelector "a[onClick*=Country] > span"
            emit value
        },
        hotelId : {
            extractCrawledUrl()
            regexp "d(\\d+)"
            emit value
        },
        marketName : {
            textCssSelector "b.rank ~ a"
            emit value
        },
        phone : {
            apply { phoneExtractor it }
            emit value
        },
        highlights : {
            textCssSelector ".highlight"
            emit array
        }
    ]) to result
}

def printInput(input){
  println input
  return input
}

def phoneExtractor (input){
  println input
  def lines = input.split("\n")
  def a = lines[4].substring(3,6)
  def b = lines[5].substring(3,6)
  a += lines[6].substring(4,8)
  b += lines[7].substring(4,7)
  def c = lines[8].substring(3,4)
  return a+c+b
}


